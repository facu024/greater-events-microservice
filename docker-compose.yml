services:
  discovery:
    build: ./discovery
    ports: ["8761:8761"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8761/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 30

  gateway:
    build: ./gateway
    depends_on:
      discovery:
        condition: service_healthy
    environment:
      - SERVER_PORT=8080
      - EUREKA_URI=http://discovery:8761/eureka
    ports: ["8080:8080"]



  # === DATABASES ===
  auth-db:
    image: postgres:14
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports: ["5435:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d authdb"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks: [ backend ]

  artist-db:
    image: postgres:14
    environment:
      POSTGRES_DB: artistdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports: ["5436:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d artistdb"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - artist_db_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks: [ backend ]

  event-db:
    image: postgres:14
    environment:
      POSTGRES_DB: eventdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports: ["5437:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d eventdb"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - event_db_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks: [ backend ]

  # === MICROSERVICES ===

  auth-service:
    build: ./auth-service
    ports: ["8084:8084"]
    environment:
      - SERVER_PORT=8084
      - EUREKA_URI=http://discovery:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-db:5432/authdb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=pass
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - JWT_SECRET=change-this-secret
    depends_on:
      discovery:
        condition: service_healthy
      auth-db:
        condition: service_healthy
    restart: unless-stopped
    networks: [ backend ]

  artist-service:
    build: ./artist-service
    ports: ["8081:8081"]
    environment:
      - SERVER_PORT=8081
      - EUREKA_URI=http://discovery:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:postgresql://artist-db:5432/artistdb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=pass
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - JWT_SECRET=change-this-secret
    depends_on:
      discovery:
        condition: service_healthy
      artist-db:
        condition: service_healthy
    restart: unless-stopped
    networks: [ backend ]

  event-service:
    build: ./event-service
    ports: ["8082:8082"]
    environment:
      - SERVER_PORT=8082
      - EUREKA_URI=http://discovery:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:postgresql://event-db:5432/eventdb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=pass
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - JWT_SECRET=change-this-secret
      # Llamadas internas entre servicios (DNS del compose)
      - ARTIST_SERVICE_URL=http://artist-service:8081
    depends_on:
      discovery:
        condition: service_healthy
      event-db:
        condition: service_healthy
    restart: unless-stopped
    networks: [ backend ]

# === NETWORKS & VOLUMES ===
networks:
  backend:

volumes:
  auth_db_data:
  artist_db_data:
  event_db_data:
